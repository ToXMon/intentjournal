/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockToken,
  MockTokenInterface,
} from "../../../contracts/MockTokenFlattened.sol/MockToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60406080815234620004405762000f2f803803806200001e8162000445565b9283398101608082820312620004405781516001600160401b039290838111620004405782620000509183016200046b565b90602092838201519085821162000440576200006e9183016200046b565b91858201519060ff82169283830362000440576060015195815181811162000340576003908154906001948583811c9316801562000435575b8a8410146200041f578190601f93848111620003c9575b508a90848311600114620003625760009262000356575b505060001982851b1c191690851b1782555b8651928311620003405760049687548581811c9116801562000335575b8a8210146200032057828111620002d5575b50889184116001146200026a579383949184926000956200025e575b50501b92600019911b1c19161783555b3315620002475760055490336001600160a01b0383167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a81b03199091163360ff60a01b19161760a09190911b60ff60a01b1617600555604d81116200023257600a0a928381029381850414901517156200021d57600254908382018092116200021d57506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a351610a519081620004de8239f35b601190634e487b7160e01b6000525260246000fd5b601182634e487b7160e01b6000525260246000fd5b8551631e4fbdf760e01b8152600081850152602490fd5b01519350388062000132565b9190601f1984169288600052848a6000209460005b8c89838310620002bd5750505010620002a2575b50505050811b01835562000142565b01519060f884600019921b161c191690553880808062000293565b8686015189559097019694850194889350016200027f565b88600052896000208380870160051c8201928c881062000316575b0160051c019086905b8281106200030957505062000116565b60008155018690620002f9565b92508192620002f0565b602289634e487b7160e01b6000525260246000fd5b90607f169062000104565b634e487b7160e01b600052604160045260246000fd5b015190503880620000d5565b60008681528c8120899550929190601f198516908e5b828210620003b1575050841162000398575b505050811b018255620000e7565b015160001983871b60f8161c191690553880806200038a565b8385015186558b979095019493840193018e62000378565b909150846000528a6000208480850160051c8201928d861062000415575b918991869594930160051c01915b82811062000405575050620000be565b60008155859450899101620003f5565b92508192620003e7565b634e487b7160e01b600052602260045260246000fd5b92607f1692620000a7565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200034057604052565b919080601f84011215620004405782516001600160401b0381116200034057602090620004a1601f8201601f1916830162000445565b92818452828287010111620004405760005b818110620004c957508260009394955001015290565b8581018301518482018401528201620004b356fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461072957508063095ea7b31461068057806318160ddd1461066157806323b872dd1461056e578063313ce5671461054957806340c10f191461051c57806342966c681461046657806370a082311461042f578063715018a6146103cf5780637b56c2b2146103235780638da5cb5b146102fa57806395d89b41146101d8578063a9059cbb146101a7578063dd62ed3e1461015a5763f2fde38b146100c857600080fd5b34610156576020366003190112610156576100e1610869565b906100ea610978565b6001600160a01b03918216928315610140575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101a357806003193601126101a35780602092610178610869565b610180610884565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346101a357806003193601126101a3576020906101d16101c7610869565b602435903361089a565b5160018152f35b509190346101a357816003193601126101a35780519082845460018160011c90600183169283156102f0575b60209384841081146102dd578388529081156102c1575060011461026c575b505050829003601f01601f191682019267ffffffffffffffff8411838510176102595750829182610255925282610820565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106102ad5750505050830101388080610223565b805488860183015293019284908201610297565b60ff1916878501525050151560051b8401019050388080610223565b634e487b7160e01b895260228a52602489fd5b91607f1691610204565b5050346101a357816003193601126101a35760055490516001600160a01b039091168152602090f35b508290346101a357826003193601126101a35761033e610869565b6024359160ff60055460a01c16604d81116103bc57600a0a6103e890808202918204036103bc578311610379575090610376916109a4565b80f35b606490602086519162461bcd60e51b8352820152601860248201527f4661756365743a20416d6f756e7420746f6f206c6172676500000000000000006044820152fd5b634e487b7160e01b855260118252602485fd5b833461042c578060031936011261042c576103e8610978565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101a35760203660031901126101a35760209181906001600160a01b03610457610869565b16815280845220549051908152f35b509190346101a35760203660031901126101a3578235903315610506573383528260205280832054938285106104db57508183943385528460205203818420558160025403600255519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a380f35b905163391434e360e21b81523391810191825260208201859052604082018390529081906060010390fd5b51634b637e8f60e11b8152808401839052602490fd5b5050346101a35736600319011261042c57610376610538610869565b610540610978565b602435906109a4565b5050346101a357816003193601126101a35760209060ff60055460a01c169051908152f35b50823461042c57606036600319011261042c57610589610869565b610591610884565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983036105cd575b6020886101d189898961089a565b86831061063557811561061e573315610607575082526001602090815286832033845281529186902090859003905582906101d1876105bf565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101a357816003193601126101a3576020906002549051908152f35b5034610156578160031936011261015657610699610869565b602435903315610712576001600160a01b03169182156106fb57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b84915083346101565782600319360112610156578260035460018160011c9060018316928315610816575b60209384841081146102dd578388529081156107fa57506001146107a457505050829003601f01601f191682019267ffffffffffffffff8411838510176102595750829182610255925282610820565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106107e65750505050830101858080610223565b8054888601830152930192849082016107d0565b60ff1916878501525050151560051b8401019050858080610223565b91607f1691610754565b6020808252825181830181905290939260005b82811061085557505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610833565b600435906001600160a01b038216820361087f57565b600080fd5b602435906001600160a01b038216820361087f57565b916001600160a01b0380841692831561095f57169283156109465760009083825281602052604082205490838210610914575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6005546001600160a01b0316330361098c57565b60405163118cdaa760e01b8152336004820152602490fd5b6001600160a01b03169081156109465760025490808201809211610a055760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160009360025584845283825260408420818154019055604051908152a3565b634e487b7160e01b600052601160045260246000fdfea264697066735822122033e06e2d9b5343788a556eb83a7e24b1e964fc332390e312648a33045c3faec064736f6c63430008180033";

type MockTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockToken__factory extends ContractFactory {
  constructor(...args: MockTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      decimals_,
      initialSupply,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      decimals_,
      initialSupply,
      overrides || {}
    ) as Promise<
      MockToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockToken__factory {
    return super.connect(runner) as MockToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTokenInterface {
    return new Interface(_abi) as MockTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockToken {
    return new Contract(address, _abi, runner) as unknown as MockToken;
  }
}
